<?php

function giftaid_webform_integration_init() {
  if (check_giftaid_installed()) {
    global $base_url;
    $settings = array(
      'basePath' => $base_url,
      'eligibilityFieldName' => get_eligibility_form_key_name(),
    );
    drupal_add_js(array('giftaidWebformIntegration' => $settings), 'setting');
  }
}

function giftaid_webform_integration_webform_submission_insert($node, $submission) {
  if (!empty($node->webform_civicrm)) {
    $enabledFields = get_webform_enabled_fields($node->nid);
    $eligibleForGiftAidField = get_eligibility_form_key_name();

    // Only implement when Gift Aid field is enabled
    if (field_exists($enabledFields, array($eligibleForGiftAidField))) {
      giftaid_wf_submission($node, $submission);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function giftaid_webform_integration_form_alter(&$form, &$form_state, $form_id) {
  if (check_giftaid_installed()) {
    if($form_id == 'wf_crm_configure_form'){
      array_unshift($form['#attached']['js'], drupal_get_path('module', 'giftaid_webform_integration') . '/js/giftaid.admin.js');
    }
  }
}

function giftaid_wf_submission($node, $submission) {
  // Webform node Id
  $webformNid = $submission->nid;
    
  $submittedValues = $submission->data;
    
  $webformFields = $node->webform['components'];
  foreach($node->webform['components'] as $component) {
    $webformFields[$component['form_key']] = $component['cid'];
  }
    
  // get contact id
  $contactId = $submittedValues[$webformFields['civicrm_1_contact_1_contact_existing']][0];

  // get field key for eligibility
  $eligibleForGiftAidField = get_eligibility_form_key_name();
  $eligibilityFieldId = $webformFields[$eligibleForGiftAidField];

  // get address
  $address = get_address($submittedValues, $webformFields);
  $postCode = $submittedValues[$webformFields['civicrm_1_contact_1_address_postal_code']][0];

  // donot submit unless postcode is set
  if (!$postCode) {
    return false;
  }

  if (isset($submittedValues[$eligibilityFieldId])) {
    $params = array(
      'entity_id' => $contactId,
      'eligible_for_gift_aid' => $submittedValues[$eligibilityFieldId][0],
      'start_date' => get_contribution_receive_date($contactId),
      'address' => $address,
      'post_code' => $postCode,
    );
    CRM_Civigiftaid_Utils_GiftAid::setDeclaration($params);
  }
}

function get_eligibility_form_key_name() {
  civicrm_initialize();
  $customFieldData = civicrm_api3('CustomField', 'get', array(
    'sequential' => 1,
    'return' => "custom_group_id,id",
    'name' => "Eligible_For_Gift_Aid",
    'custom_group_id' => "Gift_Aid",
  ));

  if (!$customFieldData['is_error']) {
    $customGroupId = $customFieldData['values'][0]['custom_group_id'];
    $customFieldId = $customFieldData['values'][0]['id'];

    $fieldKey = "cg{$customGroupId}_custom_{$customFieldId}";

    return "civicrm_1_contribution_1_{$fieldKey}";
  }
  return false;
}

function get_address($submittedValues, $webformFields) {
  $address = $submittedValues[$webformFields['civicrm_1_contact_1_address_street_address']][0] . ', ' 
           . $submittedValues[$webformFields['civicrm_1_contact_1_address_city']][0] . ', ' 
           . $submittedValues[$webformFields['civicrm_1_contact_1_address_state_province_id']][0];
    //. CRM_Core_PseudoConstant::stateProvince($input[$stateFieldId], FALSE);
  return $address;
}

function get_contribution_receive_date($contactId) {
  $result = civicrm_api3('Contribution', 'get', array(
    'sequential' => 1,
    'return' => "receive_date",
    'contact_id' => $contactId,
    'options' => array('sort' => "receive_date DESC", 'limit' => 1),
  ));
  if (!$result['is_error']) {
    return $result['values'][0]['receive_date'];
  }
  return false;
}

function get_webform_enabled_fields($webformNid) {
  $enabledFields = db_select('webform_component', 'wfc')
    ->fields('wfc', array('form_key'))
    ->condition('nid', $webformNid, '=')
    ->execute()
    ->fetchCol('form_key');

  return $enabledFields;
}

function field_exists($enabledFields, $fieldsToCheck) {
  $fieldsNotPresent = array_diff($fieldsToCheck, $enabledFields);
  if ($fieldsNotPresent) {
    return false;
  }
  return true;
}

function check_giftaid_installed() {
  civicrm_initialize();
  $extensions = CRM_Core_PseudoConstant::getModuleExtensions();
  foreach ($extensions as $key => $extension) {
    if ($extension['prefix'] == 'civigiftaid') {
      return TRUE;
    }
  }
  return FALSE;
}
